# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/ai/chat:
        post:
            tags:
                - AIService
            operationId: AIService_Chat
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ai.v1.CreateChatRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ai.v1.ChatResponse'
    /v1/category:
        get:
            tags:
                - CategoryService
            operationId: CategoryService_GetCategoryFeed
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/category.v1.GetCategoryFeedResponse'
        post:
            tags:
                - CategoryService
            operationId: CategoryService_CreateCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/category.v1.CreateCategoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/category/{id}:
        get:
            tags:
                - CategoryService
            operationId: CategoryService_GetCategoryById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/category.v1.Category'
        put:
            tags:
                - CategoryService
            operationId: CategoryService_UpdateCategory
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/category.v1.UpdateCategoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - CategoryService
            operationId: CategoryService_DeleteCategory
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/login:
        post:
            tags:
                - AuthService
            operationId: AuthService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LoginResponse'
    /v1/media:
        get:
            tags:
                - MediaService
            operationId: MediaService_GetMediaFeed
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/media.v1.GetMediaFeedResponse'
        post:
            tags:
                - MediaService
            operationId: MediaService_CreateMedia
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/media.v1.CreateMediaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/media/{id}:
        get:
            tags:
                - MediaService
            operationId: MediaService_GetMediaById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/media.v1.Media'
        put:
            tags:
                - MediaService
            operationId: MediaService_UpdateMedia
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/media.v1.UpdateMediaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - MediaService
            operationId: MediaService_DeleteMedia
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/news:
        get:
            tags:
                - NewsService
            operationId: NewsService_GetNewsFeed
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/news.v1.GetNewsFeedResponse'
        post:
            tags:
                - NewsService
            operationId: NewsService_CreateNews
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/news.v1.CreateNewsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/news/{id}:
        get:
            tags:
                - NewsService
            operationId: NewsService_GetNewsById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/news.v1.News'
        put:
            tags:
                - NewsService
            operationId: NewsService_UpdateNews
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/news.v1.UpdateNewsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - NewsService
            operationId: NewsService_DeleteNews
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/specialist:
        get:
            tags:
                - SpecialistService
            operationId: SpecialistService_GetSpecialistFeed
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/specialist.v1.GetSpecialistFeedResponse'
        post:
            tags:
                - SpecialistService
            operationId: SpecialistService_CreateSpecialist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/specialist.v1.CreateSpecialistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/specialist/{id}:
        get:
            tags:
                - SpecialistService
            operationId: SpecialistService_GetSpecialistById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/specialist.v1.Specialist'
        put:
            tags:
                - SpecialistService
            operationId: SpecialistService_UpdateSpecialist
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/specialist.v1.UpdateSpecialistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - SpecialistService
            operationId: SpecialistService_DeleteSpecialist
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/tags:
        get:
            tags:
                - TagsService
            operationId: TagsService_GetTagsFeed
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tags.v1.GetTagsFeedResponse'
        post:
            tags:
                - TagsService
            operationId: TagsService_CreateTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tags.v1.CreateTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/tags/category/{id}:
        get:
            tags:
                - TagsService
            operationId: TagsService_GetTagsByCategory
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tags.v1.GetTagsByCategoryResponse'
    /v1/tags/{id}:
        get:
            tags:
                - TagsService
            operationId: TagsService_GetTagsById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/tags.v1.Tags'
        put:
            tags:
                - TagsService
            operationId: TagsService_UpdateTags
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tags.v1.UpdateTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - TagsService
            operationId: TagsService_DeleteTags
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /v1/token:
        post:
            tags:
                - AuthService
            operationId: AuthService_Token
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.TokenResponse'
components:
    schemas:
        ai.v1.ChatResponse:
            type: object
            properties:
                message:
                    type: string
        ai.v1.CreateChatRequest:
            type: object
            properties:
                message:
                    type: string
        auth.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        auth.v1.LoginResponse:
            type: object
            properties:
                token:
                    type: string
        auth.v1.TokenResponse:
            type: object
            properties:
                username:
                    type: string
        category.v1.Category:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                tag:
                    type: array
                    items:
                        $ref: '#/components/schemas/category.v1.Tag'
        category.v1.CreateCategoryRequest:
            type: object
            properties:
                name:
                    type: string
        category.v1.GetCategoryFeedResponse:
            type: object
            properties:
                category:
                    type: array
                    items:
                        $ref: '#/components/schemas/category.v1.Category'
                total:
                    type: integer
                    format: int32
        category.v1.Tag:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        category.v1.UpdateCategoryRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        media.v1.CreateMediaRequest:
            type: object
            properties:
                title:
                    type: string
                videoUrl:
                    type: string
                thumbnailUrl:
                    type: string
                description:
                    type: string
        media.v1.GetMediaFeedResponse:
            type: object
            properties:
                media:
                    type: array
                    items:
                        $ref: '#/components/schemas/media.v1.ShortMedia'
                total:
                    type: integer
                    format: int32
        media.v1.Media:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                videoUrl:
                    type: string
                thumbnailUrl:
                    type: string
        media.v1.ShortMedia:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                shortDescription:
                    type: string
                videoUrl:
                    type: string
                thumbnailUrl:
                    type: string
        media.v1.UpdateMediaRequest:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                videoUrl:
                    type: string
                thumbnailUrl:
                    type: string
                description:
                    type: string
        news.v1.CreateNewsRequest:
            type: object
            properties:
                title:
                    type: string
                body:
                    type: string
                shortBody:
                    type: string
                imageUrl:
                    type: string
        news.v1.GetNewsFeedResponse:
            type: object
            properties:
                news:
                    type: array
                    items:
                        $ref: '#/components/schemas/news.v1.ShortNews'
                total:
                    type: integer
                    format: int32
        news.v1.News:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                body:
                    type: string
                imageUrl:
                    type: string
        news.v1.ShortNews:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                shortBody:
                    type: string
                imageUrl:
                    type: string
        news.v1.UpdateNewsRequest:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                body:
                    type: string
                shortBody:
                    type: string
                imageUrl:
                    type: string
        specialist.v1.CreateSpecialistRequest:
            type: object
            properties:
                name:
                    type: string
                fio:
                    type: string
                description:
                    type: string
        specialist.v1.GetSpecialistFeedResponse:
            type: object
            properties:
                Specialist:
                    type: array
                    items:
                        $ref: '#/components/schemas/specialist.v1.Specialist'
                total:
                    type: integer
                    format: int32
        specialist.v1.Specialist:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                fio:
                    type: string
                description:
                    type: string
        specialist.v1.UpdateSpecialistRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                fio:
                    type: string
                description:
                    type: string
        tags.v1.CreateTagsRequest:
            type: object
            properties:
                name:
                    type: string
        tags.v1.GetTagsByCategoryResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/tags.v1.Tags'
        tags.v1.GetTagsFeedResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/tags.v1.Tags'
                total:
                    type: integer
                    format: int32
        tags.v1.Tags:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        tags.v1.UpdateTagsRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
tags:
    - name: AIService
    - name: AuthService
    - name: CategoryService
    - name: MediaService
    - name: NewsService
    - name: SpecialistService
    - name: TagsService
